{"version":3,"sources":["components/FaqStyle/Modal/Modal.js","components/FaqStyle/Modal/ModalButtonWrapper.js","components/TodoForm/TodoForm.js","components/TodoForm/TodoFormMobile.js","components/Todo.js","components/TodoList.js","components/FaqStyle/FaqFooter/FaqFooter.js","App.js","index.js"],"names":["Modal","props","visible","children","onClose","bgClose","onCloseHandler","className","onClick","e","stopPropagation","ModalButtonWrapper","buttonText","open","useState","setVisible","clases","initialFormValues","title","descripcion","TodoForm","todoAdd","todoEdit","todoUpdate","setTodoEdit","formValues","setFormValues","error","setError","successMessage","setSuccessMessage","useEffect","handleInputChange","changeFormValues","target","name","value","onSubmit","preventDefault","trim","setTimeout","type","placeholder","onChange","TodoFormMobile","Todo","todo","todoDelete","todoToggleCompleted","completed","id","TodoList","todos","length","map","FaqFooter","href","inicialTodos","localTodos","JSON","parse","localStorage","getItem","App","setTodos","setItem","stringify","changedTodos","Date","now","todoId","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76e6b8c9.chunk.js","sourcesContent":["import './Modal.css';\n\nconst Modal = (props) => {\n    let { visible, children, onClose, bgClose } = props;\n\n    const onModalClick = (e) => {\n        e.stopPropagation();\n    }\n\n    const onCloseHandler = () => {\n        onClose && onClose();\n    };\n\n    const onBgClick = () => {\n        bgClose && onCloseHandler();\n    }\n\n    return visible?(\n\n        <div className={\"modal--overlay\"}  onClick={onBgClick}>\n            <div className={\"modal\"} onClick={onModalClick}>\n                <div className={'modal--header'}>\n                    <button className={\"modal--close-btn\"} onClick={onCloseHandler}></button>\n                </div>\n                <div className={'modal--body'}>\n                    {children}\n                </div>\n            </div>\n        </div>\n        \n    ) :\n    null;\n}\n\nexport default Modal;","import React, { useState } from 'react';\nimport Modal from './Modal';\n\n\nconst ModalButtonWrapper = ({buttonText, children, className, bgClose, open }) => {\n    const [visible, setVisible] = useState(false);\n\n\n    const onButtonClick = () => {\n        setVisible(true);\n    };\n\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    open&& setVisible(true)\n\n    return (\n        <div className=\"modal-button-wrapper\">\n            <button className={className} onClick={onButtonClick} >{buttonText}</button>\n            <Modal visible={visible} clases='home-modal' onClose={onClose} bgClose={bgClose}>\n                <div className='scroll'>{children}</div>\n            </Modal>\n        </div>\n    );\n}\n\nexport default ModalButtonWrapper;","import React, { useState, useEffect } from \"react\";\n\nconst initialFormValues ={\n    title: '',\n    descripcion: ''\n}\n\nconst TodoForm = ({ todoAdd, todoEdit, todoUpdate, setTodoEdit }) => {\n    const [formValues, setFormValues] = useState(initialFormValues)\n    const { title, descripcion } = formValues;\n    const [ error, setError ] = useState(null);\n    const [successMessage, setSuccessMessage] = useState(null);\n    useEffect(() => {\n        if (todoEdit) {\n            setFormValues(todoEdit);\n        } else {\n            setFormValues(initialFormValues);\n        }\n        return\n    }, [todoEdit])\n\n    const handleInputChange = (e) => {\n        const changeFormValues = {\n            ...formValues,\n            [e.target.name] : e.target.value\n        }\n        setFormValues(changeFormValues)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // trim elimina espacios en blanco\n        if (title.trim() ===''){\n            setError('Debes indicar un titulo');\n            setTimeout(()=> {\n                setError(null);\n            },2000)\n            return;\n        }\n\n        if(todoEdit) {\n            //Actualizando\n            todoUpdate(formValues);\n            setSuccessMessage('Actualizado con exito');\n        }\n\n        else {\n        //Agregar Tarea\n        todoAdd(formValues);\n        setSuccessMessage('Agregado con exito');\n        setFormValues(initialFormValues);\n        }\n\n        setTimeout(()=> {\n            setSuccessMessage(null);\n        },2000)\n        setError(null)\n    }\n    return (\n        <div className='col'>\n            <h2 className='mt-0 m-md-revert'> {todoEdit ? 'Editar Tarea' : 'Nueva Tarea'}</h2>\n            <form onSubmit={handleSubmit} className='col justify-content-center'>\n\n                <input \n                type=\"text\" \n                placeholder=\"Titulo\" \n                value={title}\n                name=\"title\"\n                onChange={handleInputChange}\n                />\n\n                <textarea \n                placeholder=\"Descripcion\"\n                value={descripcion}\n                name=\"descripcion\"\n                onChange={handleInputChange}\n                ></textarea>\n                {todoEdit&&\n                    <button \n                    className=\"btn btn-warning\" \n                    onClick={() => {setTodoEdit(null); setFormValues(initialFormValues)}}\n                    > Cancelar </button>\n                }\n\n                <button className=\"m-2\" >\n                    {todoEdit ? 'Editar Tarea' : 'Agregar Tarea'}\n                </button>\n\n            </form>\n            {\n                error &&\n                (\n                    <div className=\"alert alert-danger mt-5\">\n                        { error }\n                    </div>\n                )\n            }\n            {\n                successMessage &&\n                (\n                    <div className=\"alert alert-success mt-5\">\n                        { successMessage }\n                    </div>\n                )\n            }\n        </div>\n    );\n};\n\nexport default TodoForm","import React from 'react'\nimport ModalButtonWrapper from '../FaqStyle/Modal/ModalButtonWrapper'\nimport TodoForm from './TodoForm'\n\nconst TodoFormMobile = ({buttonText, todoEdit,todoAdd,todoUpdate,setTodoEdit}) => {\n    return (\n        <ModalButtonWrapper buttonText={buttonText} className='w-fill-available d-md-none'>\n            <TodoForm \n            todoEdit={todoEdit}\n            todoAdd={todoAdd}\n            todoUpdate={todoUpdate}\n            setTodoEdit={setTodoEdit} />\n        </ModalButtonWrapper> \n    )\n}\n\nexport default TodoFormMobile\n","import React from 'react';\nimport TodoFormMobile from './TodoForm/TodoFormMobile';\n\nconst Todo = ({ todo, todoDelete, todoToggleCompleted, setTodoEdit, todoUpdate, todoEdit, todoAdd }) => {\n    return (\n        <div className=\"card \">\n            <div className=\"card-body\" >\n                <h3 className=\"card-title text-end \" >\n                    {todo.title}\n                    <button \n                    className={`btn btn-sm ${todo.completed ? 'btn-success' : 'btn-outline-success'} ms-2 `}\n                    onClick={() => todoToggleCompleted(todo.id)} \n                    >\n                        {todo.completed ? 'Terminado' : 'Terminar'}\n                    </button>\n                </h3>\n                <p className=\"card-text text-end \">\n                    {todo.descripcion}\n                </p>\n                <hr />\n                <div className=\"d-flex justify-content-end\">\n                    <div onClick={() => setTodoEdit(todo)}>\n                    <TodoFormMobile buttonText='Editar' setTodoEdit={setTodoEdit} todoUpdate={todoUpdate} todoEdit={todoEdit} todoAdd={todoAdd}/>\n                    </div>\n                    <button className=\"d-none d-md-block\" onClick={() => setTodoEdit(todo)} >Editar</button>\n                    <button className=\"\" onClick={() => todoDelete(todo.id)} >Eliminar</button>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default Todo;","import React from \"react\";\nimport Todo from \"./Todo\";\n\n\nconst TodoList = ({todos, todoDelete, todoToggleCompleted, setTodoEdit, todoEdit , todoUpdate }) => {\n    return (\n        <>\n            {\n                todos.length === 0 \n                ? (\n                    <div className=\"alert alert-especial\">\n                        No hay tareas. Agrega una {\":)\"}\n                    </div>\n                )\n                : (\n                    todos.map( todo => (\n                        <Todo \n                        todo={todo} \n                        key={todo.id} \n                        todoDelete={todoDelete}\n                        todoToggleCompleted={todoToggleCompleted}\n                        setTodoEdit={setTodoEdit}\n\n                        todoEdit={todoEdit}\n                        todoUpdate={todoUpdate}\n                        />\n                    ))\n                )\n            }\n        </>\n    );\n};\n\nexport default TodoList","import React from 'react'\nimport './FaqFooter.css'\n\nconst FaqFooter = () => {\n    return (\n        <div className=\"faq-footer\">\n            <p className='faq-footer--text'>Pagina hecha con <span className=\"corazon\"></span> por <a href='https://www.instagram.com/faqtoff/'>@faqtoff</a></p>\n        </div>\n    )\n}\n\nexport default FaqFooter\n","import React, { useEffect, useState } from \"react\";\nimport TodoList from './components/TodoList';\nimport TodoForm from './components/TodoForm/TodoForm';\nimport FaqFooter from \"./components/FaqStyle/FaqFooter/FaqFooter\";\nimport TodoFormMobile from \"./components/TodoForm/TodoFormMobile\";\n\nconst inicialTodos = [\n];\nconst localTodos = JSON.parse(localStorage.getItem('todos'));\n\n\nfunction App() {\n\n  const [ todos, setTodos ] = useState( localTodos || inicialTodos);\n  const [todoEdit, setTodoEdit] = useState(null);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos))\n  },[todos])\n\n  const todoDelete = (todoId) => {\n    const changedTodos = todos.filter(todo => todo.id !== todoId);\n    if (todoEdit && todoId === todoEdit.id) {\n      setTodoEdit(null);\n    }\n    setTodos(changedTodos);\n  };\n  const todoToggleCompleted = (todoId) => {\n\n    /*const changedTodos = todos.map(todo => {\n      const todoEdit = {\n        ...todo,\n        completed: !todo.completed\n      }\n      if ( todo.id === todoId ) {\n        return todoEdit\n      } \n      else {\n        return todo\n      });\n    }*/\n\n    /*\n    const changedTodos = todos.map(todo => (\n      todo.id === todoId \n      ? {...todo, completed: !todo.completed}\n      :todo \n    ));\n    */\n\n   const changedTodos = todos.map(todo => todo.id === todoId ? {...todo, completed: !todo.completed} : todo );\n\n    setTodos(changedTodos);\n\n  };\n  const todoAdd = (todo) => {\n    const newTodo = {\n      id: Date.now(),\n      ...todo,\n      completed: false\n    }\n    const changedTodos = [\n\n      newTodo,\n      ...todos\n    ]\n    setTodos(changedTodos);\n  }\n  const todoUpdate = (todoEdit) => {\n    const changedTodos = todos.map(todo => (\n      todo.id === todoEdit.id\n      ? todoEdit\n      : todo\n    ))\n    setTodos(changedTodos);\n  }\n\n\n  return (\n    <div className=\"container\">\n      <h1 className='text-center mb-0'>ToDoList <span>by faq</span></h1>\n      <div className=\"row justify-content-center\">\n        <div className=\"col tareas justify-content-center justify-md-content-start align-md-between\">\n\n        <h2 className=\"text-center\">Tareas</h2>\n          <TodoFormMobile \n          buttonText='Agregar Tarea' \n          setTodoEdit={setTodoEdit} \n          todoUpdate={todoUpdate} \n          todoAdd={todoAdd}/>\n\n          <TodoList \n          todos={todos}\n          todoDelete={todoDelete}\n          todoToggleCompleted={todoToggleCompleted}\n\n          setTodoEdit={setTodoEdit}\n          todoAdd={todoAdd}\n          todoUpdate={todoUpdate}\n          todoEdit={todoEdit}\n          />\n        </div>\n        <div className=\"col d-none d-md-block\">\n          <TodoForm \n          todoEdit={todoEdit}\n          todoAdd={todoAdd}\n          todoUpdate={todoUpdate}\n          setTodoEdit={setTodoEdit}\n          />\n        </div>\n      </div>\n      <FaqFooter />\n    </div>\n  );\n}\n\nexport default App;\n","// REACT \nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// STYLES\nimport './normalize.css';\nimport './index.css';\nimport './components/FaqStyle/FaqStyle.css'\n// COMPONENTS\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}